% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data_ops.R
\name{safe_left_join}
\alias{safe_left_join}
\title{Safe left join}
\usage{
safe_left_join(left_df, right_df, ...)
}
\arguments{
\item{left_df}{(data.frame) Left data frame to left join to}

\item{right_df}{(data.frame) Right data frame to join unto the left data frame}

\item{...}{(ellipsis) Extra arguments to pass into \link[dplyr:mutate-joins]{dplyr::left_join}}
}
\value{
(data.frame) left_df, the left data frame
}
\description{
\code{safe_left_join} is a wrapper around \link[dplyr:mutate-joins]{dplyr::left_join} that does an additional
check for additional rows joined unto the left data frame.
}
\examples{
# Left table ----------------------------------------------------------------
left_table <- data.frame(
  ID = sprintf(
    "\%s\%s",
    sample(1000:2000, 5, replace = TRUE),
    sample(letters, 5, replace = TRUE)
  ),
  column_b = runif(5, min = 0, max = 1),
  column_c = sample(letters, 5, replace = TRUE)
)
print(left_table)

# Right table ---------------------------------------------------------------
right_table <- data.frame(
  ID = left_table$ID,
  column_d = runif(5, min = 10, max = 50)
)
print(right_table)

# Left table has same row count after join ----------------------------------
left_table \%>\%
  safe_left_join(right_table, by = "ID") \%>\%
  print()

# Right table with duplicated ID --------------------------------------------
right_table2 <- rbind(right_table, data.frame(
  ID = right_table[3:4, "ID"],
  column_d = runif(2, min = 10, max = 50)
))
print(right_table2)

# Left table has more rows after join ---------------------------------------
try(
  left_table \%>\%
    safe_left_join(right_table2, by = "ID") \%>\%
    print()
)
}
