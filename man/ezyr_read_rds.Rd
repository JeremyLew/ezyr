% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/file_ops.R
\name{ezyr_read_rds}
\alias{ezyr_read_rds}
\title{Read encrypted RDS file}
\usage{
ezyr_read_rds(filepath, key)
}
\arguments{
\item{filepath}{(character) File path to encrypted RDS file}

\item{key}{(cyphr_key) Sodium key obtained from invoking \link{ask_for_key}}
}
\value{
Decrypted data from the encrypted RDS file
}
\description{
\code{ezyr_read_rds} reads data from an encrypted RDS file.
}
\examples{
library(diffdf)

# Create random dataframe for illustration purpose
set.seed(123)
df <- data.frame(
  col1 = sample(letters, 10, replace = TRUE), # Random characters
  col2 = round(runif(10, min = 1, max = 100), 0), # Random integers between 1 and 100
  col3 = runif(10, min = 0, max = 1) # Random floats between 0 and 1
)

# Get a sodium key
key <- ask_for_key("my_password")

# Save RDS file in temp directory
filepath <- file.path(tempdir(), "file1.rds")
ezyr_save_rds(df, filepath, key)
print(list.files(tempdir(), pattern = "\\\\.rds$"))

# Read the RDS file back
df_readback <- ezyr_read_rds(filepath, key)

# Compare the read back RDS file with original
diffdf(base = df, compare = df_readback)

# Delete the saved RDS file in temp directory
unlink(filepath)
print(list.files(tempdir(), pattern = "\\\\.rds$"))

}
