% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data_ops.R
\name{extract_reading_from_interval}
\alias{extract_reading_from_interval}
\title{Extract latest reading in specified window period of observation}
\usage{
extract_reading_from_interval(
  df_master,
  df_master_fields,
  df_long,
  df_long_fields,
  params
)
}
\arguments{
\item{df_master}{(data.frame) Master dataframe to join the readings unto.
\emph{df_master} must minimally contain the following 2 columns:
\itemize{
\item A column of IDs to identify each patient
\item A column of index dates (what we refer to as \emph{T} in the description above) for each patient
\item Both these columns will be identified in \emph{df_master_fields}
}}

\item{df_master_fields}{(list) A named list to identify the \emph{ID} and
\emph{index date} columns in \emph{df_master}
\itemize{
\item It takes on this format: \verb{list(ID = <your_ID_column>, index_date = <your_index_date_column>)}
\item For example: \code{list(ID = "patient_id", index_date = "enrolment_date")}
}}

\item{df_long}{(data.frame) Longitudinal data e.g. laboratory readings}

\item{df_long_fields}{(list) A named list to identify the \emph{reading date} and \emph{reading(s)} in \emph{df_long}
\itemize{
\item It takes on this format: \verb{list(reading_date = <your_reading_date_column>, reading = <your_reading_column(s)>)}
\itemize{
\item \emph{reading_date} (character) The name of the dataframe column that contains the dates of the readings
\item \emph{reading} (character or character vector) The name(s) of the dataframe column(s) that contains the readings
}
\item For example: \code{list(reading_date = "calendar_date", reading = c("bp_systolic", "bp_diastolic"))}
}}

\item{params}{(list) A named list where the names are the timepoints and the
values are numeric vectors that represent \code{c(lower_bound, upper_bound)}
\itemize{
\item For example: \code{params <- list(baseline = c(-180, 0), "3mth" = c(31, 90), "6mth" = c(120, 180))}
\item Both \code{lower} and \code{upper} bounds are included in defining the window period i.e. \code{lower_bound} <= reading_date <= \code{upper_bound}
\item For \code{params} given above, \code{extract_reading_from_interval} will consider
\itemize{
\item Baseline reading: latest reading in \emph{T-180} days <= reading_date <= \emph{T} window
\item 3-month reading: latest reading in \emph{T+31} days <= reading_date <= \emph{T+90} days window
\item 6-month reading: latest reading in \emph{T+120} days <= reading_date <= \emph{T+180} days window
}
}}
}
\value{
(data.frame) \emph{df_master} with longitudinal readings joined unto
}
\description{
Suppose that you have the following, \code{extract_reading_from_interval} will
extract the latest laboratory reading for each patient within the respective
window periods to be considered as the "baseline" reading, "3-month" reading etc.
\enumerate{
\item a set of longitudinal data e.g. laboratory readings of patients
\item a set of parameters that define the window period of observation for
considering readings that would constitute as "baseline" reading,
"3-month" reading etc. for example:
\itemize{
\item \emph{baseline}: \emph{T-180} days to \emph{T}
\item \emph{3-month}: \emph{T+31} days to \emph{T+90} days
\item where \emph{T} is the index date which could be the enrolment date or
date of first visit
}
}
}
\examples{
library(dplyr)

# Generate fake patient data for illustration -------------------------------
generate_fake_patient_data <- function(id) {
  data.frame(
    list(
      patient_id = id,
      enrolment_date = Sys.Date() + runif(1, min = -730, max = 0),
      bp_systolic = sample(30:160, 9, replace = FALSE),
      bp_diastolic = sample(10:100, 9, replace = FALSE),
      hba1c = sample(4:14, 9, replace = FALSE)
    ),
    time = c(rep("baseline", 3), rep("6mth", 3), rep("12mth", 3))
  ) \%>\%
    mutate(
      visit_date = case_when(
        time == "baseline" ~ enrolment_date + sample(-180:0, 3, replace = FALSE),
        time == "6mth" ~ enrolment_date + sample(100:180, 3, replace = FALSE),
        time == "12mth" ~ enrolment_date + sample(240:360, 3, replace = FALSE)
      ),
      days_difference = visit_date - enrolment_date
    ) \%>\%
    relocate(enrolment_date, .after = visit_date) \%>\%
    relocate(time, .after = days_difference)
}

set.seed(2024)
df_long <- rbind(
  generate_fake_patient_data("P01"),
  generate_fake_patient_data("P02"),
  generate_fake_patient_data("P03")
) \%>\%
  dplyr::arrange(patient_id, visit_date)

# Master dataframe
df_master <- df_long \%>\% distinct(patient_id, enrolment_date)
print(df_master)

# Longitudinal data of readings
## 1. days_difference = visit_date - enrolment_date
## 2. enrolment_date, days_difference and time are not required as input but
##    are shown for illustration purpose
## 3. enrolment_date will be joined unto df_long from df_master internally
## 4. days_difference will be computed internally
print(df_long)

# Extract readings ----------------------------------------------------------
## 1. Baseline reading: latest reading in "-180 days <= days_difference <= 0 days"
## 2. 6-month reading: latest reading in "100 days <= days_difference <= 180 days"
## 3. 12-month reading: latest reading in "240 days <= days_difference <= 360 days"
df_master \%>\%
  # Blood pressure
  extract_reading_from_interval(
    list(
      ID = "patient_id",
      index_date = "enrolment_date"
    ),
    df_long,
    list(
      reading_date = "visit_date",
      reading = c("bp_systolic", "bp_diastolic")
    ),
    list(
      baseline = c(-180, 0),
      "6mth" = c(100, 180),
      "12mth" = c(240, 360)
    )
  ) \%>\%
  # HbA1c
  extract_reading_from_interval(
    list(
      ID = "patient_id",
      index_date = "enrolment_date"
    ),
    df_long,
    list(
      reading_date = "visit_date",
      reading = "hba1c"
    ),
    list(
      baseline = c(-180, 0),
      "6mth" = c(100, 180),
      "12mth" = c(240, 360)
    )
  ) \%>\%
  print()

}
